//------------------------------------------------------------------------------
// <auto-generated>
// MIT License
// 
// Copyright (c) 2020 Bikeev Adil Issaevich
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
// </auto-generated>
//------------------------------------------------------------------------------
namespace StudyNowMobileApp.ViewModels
{
    using StudyNowMobileApp.Views.Main;
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.Runtime.CompilerServices;
    using System.Windows.Input;
    using Xamarin.Forms;

    /// <summary>
    /// Базовое представление ViewModel.
    /// </summary>
    public abstract class BaseViewModel : INotifyPropertyChanged
    {
        /// <inheritdoc/>
        public event PropertyChangedEventHandler PropertyChanged;

        /// <summary>
        /// Gets название страницы для отображения.
        /// </summary>
        public abstract string TitlePage { get; }

        /// <summary>
        /// Gets список имен свойств ViewModel.
        /// </summary>
#pragma warning disable CA2227 // Свойства коллекций должны быть доступны только для чтения
        protected abstract List<string> PropertyNames { get; }
#pragma warning restore CA2227 // Свойства коллекций должны быть доступны только для чтения

        /// <summary>
        /// Gets or sets свойство поьзволяющие производить переход между представлениями.
        /// </summary>
#pragma warning disable SA1202 // Elements should be ordered by access
        public INavigation Navigation { get; set; }
#pragma warning restore SA1202 // Elements should be ordered by access

        /// <summary>
        /// Производит переход на предыдущую страницу.
        /// </summary>
        public ICommand NavigateBack => new Command(() =>
        {
            this.Navigation.PopAsync();
        });

        /// <summary>
        /// Производит переход на домашнюю страницу.
        /// </summary>
        public ICommand NavigateHome => new Command(() => { this.Navigation.PopToRootAsync(); });

        /// <summary>
        /// Обновляет значения всех свойств на ViewModel.
        /// </summary>
        /// <param name="propertyNames">Список имен свойств ViewModel.</param>
        public void UpdatePropertyChanged()
        {
            foreach (var name in this.PropertyNames)
            {
                this.NotifyPropertyChanged(name);
            }
        }

        /// <summary>
        /// Отправляет сигнал на View о том, что значение забиндигованного свойства изменилось и нужно его обновить на View.
        /// </summary>
        /// <param name="propertyName">Имя обновленного параметра.</param>
        protected virtual void NotifyPropertyChanged([CallerMemberName] string propertyName = "")
        {
            this.PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));
        }
    }
}
